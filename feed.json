{
    "version": "https://jsonfeed.org/version/1",
    "title": "世界之大",
    "subtitle": "",
    "icon": "http://blog.hao45e.club/images/favicon.ico",
    "description": "",
    "home_page_url": "http://blog.hao45e.club",
    "items": [
        {
            "id": "http://blog.hao45e.club/2020/11/03/Shadowsocks%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85/",
            "url": "http://blog.hao45e.club/2020/11/03/Shadowsocks%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85/",
            "title": "Shadowsocks一键安装",
            "date_published": "2020-11-03T13:00:02.000Z",
            "content_html": "<div class=\"note info\">\n<p>秋水逸冰《Shadowsocks 一键安装脚本（四合一）》</p>\n</div>\n<h1 id=\"本脚本适用环境\"><a class=\"anchor\" href=\"#本脚本适用环境\">#</a> 本脚本适用环境</h1>\n<p>系统支持：CentOS6+，Debian7+，Ubuntu12+</p>\n<h1 id=\"关于本脚本\"><a class=\"anchor\" href=\"#关于本脚本\">#</a> 关于本脚本</h1>\n<ul>\n<li>一键安装 Shadowsocks-Python，ShadowsocksR，Shadowsocks-Go，Shadowsocks-libev 版（四选一）服务端；</li>\n<li>各版本的启动脚本及配置文件名不再重合；</li>\n<li>每次运行可安装一种版本；</li>\n<li>支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；</li>\n<li>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）</li>\n</ul>\n<h1 id=\"默认配置\"><a class=\"anchor\" href=\"#默认配置\">#</a> 默认配置</h1>\n<pre class=\"info\"><code>服务器端口：自己设定（如不设定，默认从 9000-19999 之间随机生成）\n密码：自己设定（如不设定，默认为 teddysun.com）\n加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）\n协议 (protocol)：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）\n混淆 (obfs)：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版）\n备注：脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。</code></pre><h1 id=\"使用方法\"><a class=\"anchor\" href=\"#使用方法\">#</a> 使用方法</h1>\n<h2 id=\"使用root用户登陆运行以下命令\"><a class=\"anchor\" href=\"#使用root用户登陆运行以下命令\">#</a> 使用 root 用户登陆，运行以下命令</h2>\n<div class=\"note warning\">\n<p>raw.githubusercontent.com 在国内是无法访问的，所以这个脚本是在可以访问<span class=\"spoiler bulr\" title=\"你知道得太多了\">外网</span>的服务器上执行的  <span class=\"spoiler\" title=\"你知道得太多了\">懂的自然懂</span></p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> +x shadowsocks-all.sh</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./shadowsocks-all.sh <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> shadowsocks-all.log</pre></td></tr></table></figure><h2 id=\"安装完成后脚本提示如下\"><a class=\"anchor\" href=\"#安装完成后脚本提示如下\">#</a> 安装完成后，脚本提示如下</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Congratulations, your_shadowsocks_version install completed!</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Your Server IP :your_server_ip</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Your Server Port :your_server_port</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Your Password :your_password</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Your Encryption Method:your_encryption_method</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ss:&#x2F;&#x2F;your_encryption_method:your_password@your_server_ip:your_server_port</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Your QR Code has been saved as a PNG file path:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>your_path.png</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Enjoy it!</pre></td></tr></table></figure><h2 id=\"卸载方法\"><a class=\"anchor\" href=\"#卸载方法\">#</a> 卸载方法</h2>\n<div class=\"note primary\">\n<p>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）</p>\n</div>\n<p>使用 root 用户登陆，运行以下命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./shadowsocks-all.sh uninstall</pre></td></tr></table></figure><h2 id=\"启动脚本\"><a class=\"anchor\" href=\"#启动脚本\">#</a> 启动脚本</h2>\n<div class=\"note primary\">\n<p>启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。</p>\n</div>\n<p>Shadowsocks-Python 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Shadowsocks-Python 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/init.d/shadowsocks-python start <span class=\"token operator\">|</span> stop <span class=\"token operator\">|</span> restart <span class=\"token operator\">|</span> status</pre></td></tr></table></figure><p>ShadowsocksR 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>ShadowsocksR 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/init.d/shadowsocks-r start <span class=\"token operator\">|</span> stop <span class=\"token operator\">|</span> restart <span class=\"token operator\">|</span> status</pre></td></tr></table></figure><p>Shadowsocks-Go 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Shadowsocks-Go 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/init.d/shadowsocks-go start <span class=\"token operator\">|</span> stop <span class=\"token operator\">|</span> restart <span class=\"token operator\">|</span> status</pre></td></tr></table></figure><p>Shadowsocks-libev 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Shadowsocks-libev 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/init.d/shadowsocks-libev start <span class=\"token operator\">|</span> stop <span class=\"token operator\">|</span> restart <span class=\"token operator\">|</span> status</pre></td></tr></table></figure><div class=\"note primary\">\n<p>各版本默认配置</p>\n</div>\n<p>Shadowsocks-Python 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Shadowsocks-Python 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/shadowsocks-python/config.json</pre></td></tr></table></figure><p>ShadowsocksR 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>ShadowsocksR 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/shadowsocks-r/config.json</pre></td></tr></table></figure><p>Shadowsocks-Go 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Shadowsocks-Go 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/shadowsocks-go/config.json</pre></td></tr></table></figure><p>Shadowsocks-libev 版：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Shadowsocks-libev 版</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/shadowsocks-libev/config.json</pre></td></tr></table></figure>",
            "tags": [
                "代理",
                "SSR"
            ]
        },
        {
            "id": "http://blog.hao45e.club/2020/10/19/%E4%BD%BF%E7%94%A8JSProxy%E5%92%8CWorkers%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%BB%A3%E7%90%86/",
            "url": "http://blog.hao45e.club/2020/10/19/%E4%BD%BF%E7%94%A8JSProxy%E5%92%8CWorkers%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%BB%A3%E7%90%86/",
            "title": "使用JSProxy和Workers免费搭建代理",
            "date_published": "2020-10-19T13:25:22.000Z",
            "content_html": "<div class=\"note info\">\n<p>JSProxy: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0V0aGVyRHJlYW0vanNwcm94eQ==\">https://github.com/EtherDream/jsproxy</span><br />\nCloudflare Workers: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93b3JrZXJzLmNsb3VkZmxhcmUuY29t\">https://workers.cloudflare.com</span></p>\n</div>\n<h1 id=\"把jsproxy-fork-到自己的github-repositories中\"><a class=\"anchor\" href=\"#把jsproxy-fork-到自己的github-repositories中\">#</a> 把 JSProxy fork 到自己的 GitHub Repositories 中</h1>\n<p>点击<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0V0aGVyRHJlYW0vanNwcm94eQ==\"> JSProxy</span>，进入后点击右上角 fork 到自己到存储库中 (方便<a href=\"#%E9%AB%98%E7%BA%A7\">高级</a>的更改，如果不使用高级此步骤可跳过)<br />\n<img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018010514.png\" alt=\"fork to yourself repositories\" /></p>\n<h1 id=\"创建一个cloudflare-workers项目\"><a class=\"anchor\" href=\"#创建一个cloudflare-workers项目\">#</a> 创建一个 Cloudflare Workers 项目</h1>\n<p>打开<span class=\"exturl\" data-url=\"aHR0cHM6Ly93b3JrZXJzLmNsb3VkZmxhcmUuY29tLw==\"> Workers</span> ，登陆 Cloudflare 账号激活 workers 服务<br />\n使用免费计划即可 (每天可以请求十万次 <span class=\"spoiler\" title=\"你知道得太多了\">如果不够可以多创建几个账号</span>)<br />\n 需要填写一个子域名 (***.workers.dev)</p>\n<h2 id=\"创建worker\"><a class=\"anchor\" href=\"#创建worker\">#</a> 创建 Worker</h2>\n<p><img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018010824.png\" alt=\"创建Worker\" /></p>\n<h2 id=\"粘贴js脚本\"><a class=\"anchor\" href=\"#粘贴js脚本\">#</a> 粘贴 JS 脚本</h2>\n<p>将 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0V0aGVyRHJlYW0vanNwcm94eS9ibG9iL21hc3Rlci9jZi13b3JrZXIvaW5kZXguanM=\">https://github.com/EtherDream/jsproxy/blob/master/cf-worker/index.js</span> 中的 js 代码复制进刚创建好的 worker 脚本里<br />\n<img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018013311.png\" alt=\"添加JS脚本\" /><br />\n打开后的页面就是这个样子，输入网址，点击 Go 即可<br />\n<img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018013520.png\" alt=\"jsproxy页面\" /><br />\n进入通过 js 代理的页面，链接地址前面即是 jsproxy 页面的地址，后面是代理出去的地址<br />\n<img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018014514.png\" alt=\"duckduckgo\" /></p>\n<h1 id=\"高级\"><a class=\"anchor\" href=\"#高级\">#</a> 高级</h1>\n<h2 id=\"访问次数限制\"><a class=\"anchor\" href=\"#访问次数限制\">#</a> 访问次数限制</h2>\n<p>由于注册 Cloudflare 时并没有验证邮箱，可以注册多个账号，进行同样的操作，这样就可以解决掉每日访问量太大的问题了，但是因为需要切换 worker 的地址比较麻烦，可以尝试进行<span class=\"label warning\"> TODO</span> 页面版的负载均衡</p>\n<h2 id=\"使用自定义页面\"><a class=\"anchor\" href=\"#使用自定义页面\">#</a> 使用自定义页面</h2>\n<p>进行页面调整，更改配置，以及页面版负载均衡</p>\n<h3 id=\"使用github-pages部署自定义页面\"><a class=\"anchor\" href=\"#使用github-pages部署自定义页面\">#</a> 使用 GitHub Pages 部署自定义页面</h3>\n<ol>\n<li>使用 GitHub Pages 将 fork 下来的 jsproxy 的 gh-pages 分支进行部署，可以参考另一篇博客<a href=\"/2020/10/18/%E4%BD%BF%E7%94%A8GitHubPages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/\">使用 GitHubPages 搭建静态页面</a></li>\n<li>将写在 workers 脚本里的 ASSET_URL 换成自己的</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>替换ASSET_URL</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlkdS5jb20=\">参考链接</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">ASSET_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://etherdream.github.io/jsproxy'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 替换成</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">ASSET_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://[username].github.io/jsproxy'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//username 是你的 github 用户名</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>更改 gh-pages 分支的 conf.js 和 assets/index_v3.html</li>\n</ol>\n",
            "tags": [
                "代理",
                "cloudflare"
            ]
        },
        {
            "id": "http://blog.hao45e.club/2020/10/18/%E4%BD%BF%E7%94%A8GitHubPages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/",
            "url": "http://blog.hao45e.club/2020/10/18/%E4%BD%BF%E7%94%A8GitHubPages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/",
            "title": "使用GitHubPages搭建静态页面",
            "date_published": "2020-10-18T11:45:23.000Z",
            "content_html": "<h1 id=\"以jsproxy为例点击settings\"><a class=\"anchor\" href=\"#以jsproxy为例点击settings\">#</a> 以 JSProxy 为例，点击 Settings</h1>\n<p>JSProxy 需要部署的页面在 gh-pages 分支中<br />\n<img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018195635.png\" alt=\"点击settings\" /></p>\n<h1 id=\"使用github-pages将jspxory的gh-pages分支进行部署\"><a class=\"anchor\" href=\"#使用github-pages将jspxory的gh-pages分支进行部署\">#</a> 使用 GitHub Pages 将 jspxory 的 gh-pages 分支进行部署</h1>\n<p>下拉至 GitHub Pages，选择要部署的分支以及目录，点击 Save 保存<br />\n之后即可在 http://[username].github.io/[repository] 访问静态页面 (例如：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ldGhlcmRyZWFtLmdpdGh1Yi5pby9qc3Byb3h5\">https://etherdream.github.io/jsproxy</span>)<br />\n<img data-src=\"https://hao45e-static-file.oss-cn-beijing.aliyuncs.com/blog/static/images/20201018/20201018200105.png\" alt=\"保存GitHub Pages\" /></p>\n",
            "tags": [
                "代理",
                "github"
            ]
        }
    ]
}